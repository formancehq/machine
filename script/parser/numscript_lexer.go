// Code generated from NumScript.g4 by ANTLR 4.9.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 36, 297,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,
	2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 6, 5, 88, 10, 5, 13,
	5, 14, 5, 89, 3, 5, 3, 5, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 7, 6, 99, 10, 6,
	12, 6, 14, 6, 102, 11, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 7, 3, 7, 3,
	7, 3, 7, 7, 7, 113, 10, 7, 12, 7, 14, 7, 116, 11, 7, 3, 7, 3, 7, 3, 7,
	3, 7, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9,
	3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3,
	12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 13,
	3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3,
	14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 16, 3, 16,
	3, 17, 3, 17, 3, 18, 3, 18, 3, 19, 3, 19, 3, 20, 3, 20, 3, 21, 3, 21, 3,
	22, 3, 22, 3, 23, 3, 23, 3, 24, 3, 24, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25,
	3, 25, 3, 25, 3, 25, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 27, 3,
	27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28,
	3, 28, 3, 28, 3, 28, 3, 28, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3,
	29, 3, 29, 3, 30, 6, 30, 230, 10, 30, 13, 30, 14, 30, 231, 3, 30, 5, 30,
	235, 10, 30, 3, 30, 3, 30, 5, 30, 239, 10, 30, 3, 30, 6, 30, 242, 10, 30,
	13, 30, 14, 30, 243, 3, 30, 6, 30, 247, 10, 30, 13, 30, 14, 30, 248, 3,
	30, 3, 30, 6, 30, 253, 10, 30, 13, 30, 14, 30, 254, 5, 30, 257, 10, 30,
	3, 30, 5, 30, 260, 10, 30, 3, 31, 6, 31, 263, 10, 31, 13, 31, 14, 31, 264,
	3, 32, 3, 32, 3, 33, 3, 33, 6, 33, 271, 10, 33, 13, 33, 14, 33, 272, 3,
	33, 7, 33, 276, 10, 33, 12, 33, 14, 33, 279, 11, 33, 3, 34, 3, 34, 6, 34,
	283, 10, 34, 13, 34, 14, 34, 284, 3, 34, 7, 34, 288, 10, 34, 12, 34, 14,
	34, 291, 11, 34, 3, 35, 6, 35, 294, 10, 35, 13, 35, 14, 35, 295, 4, 100,
	114, 2, 36, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11,
	21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20,
	39, 21, 41, 22, 43, 23, 45, 24, 47, 25, 49, 26, 51, 27, 53, 28, 55, 29,
	57, 30, 59, 31, 61, 32, 63, 33, 65, 34, 67, 35, 69, 36, 3, 2, 10, 4, 2,
	12, 12, 15, 15, 4, 2, 11, 11, 34, 34, 3, 2, 50, 59, 3, 2, 34, 34, 4, 2,
	97, 97, 99, 124, 5, 2, 50, 59, 97, 97, 99, 124, 5, 2, 50, 60, 97, 97, 99,
	124, 4, 2, 49, 59, 67, 92, 2, 314, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2,
	2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2,
	2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2,
	2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3,
	2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37,
	3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2,
	45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2, 2,
	2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3, 2, 2,
	2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2, 2, 2, 67, 3, 2,
	2, 2, 2, 69, 3, 2, 2, 2, 3, 71, 3, 2, 2, 2, 5, 81, 3, 2, 2, 2, 7, 84, 3,
	2, 2, 2, 9, 87, 3, 2, 2, 2, 11, 93, 3, 2, 2, 2, 13, 108, 3, 2, 2, 2, 15,
	121, 3, 2, 2, 2, 17, 126, 3, 2, 2, 2, 19, 132, 3, 2, 2, 2, 21, 137, 3,
	2, 2, 2, 23, 142, 3, 2, 2, 2, 25, 149, 3, 2, 2, 2, 27, 161, 3, 2, 2, 2,
	29, 170, 3, 2, 2, 2, 31, 172, 3, 2, 2, 2, 33, 174, 3, 2, 2, 2, 35, 176,
	3, 2, 2, 2, 37, 178, 3, 2, 2, 2, 39, 180, 3, 2, 2, 2, 41, 182, 3, 2, 2,
	2, 43, 184, 3, 2, 2, 2, 45, 186, 3, 2, 2, 2, 47, 188, 3, 2, 2, 2, 49, 190,
	3, 2, 2, 2, 51, 198, 3, 2, 2, 2, 53, 204, 3, 2, 2, 2, 55, 211, 3, 2, 2,
	2, 57, 220, 3, 2, 2, 2, 59, 259, 3, 2, 2, 2, 61, 262, 3, 2, 2, 2, 63, 266,
	3, 2, 2, 2, 65, 268, 3, 2, 2, 2, 67, 280, 3, 2, 2, 2, 69, 293, 3, 2, 2,
	2, 71, 72, 7, 116, 2, 2, 72, 73, 7, 103, 2, 2, 73, 74, 7, 111, 2, 2, 74,
	75, 7, 99, 2, 2, 75, 76, 7, 107, 2, 2, 76, 77, 7, 112, 2, 2, 77, 78, 7,
	107, 2, 2, 78, 79, 7, 112, 2, 2, 79, 80, 7, 105, 2, 2, 80, 4, 3, 2, 2,
	2, 81, 82, 7, 118, 2, 2, 82, 83, 7, 113, 2, 2, 83, 6, 3, 2, 2, 2, 84, 85,
	9, 2, 2, 2, 85, 8, 3, 2, 2, 2, 86, 88, 9, 3, 2, 2, 87, 86, 3, 2, 2, 2,
	88, 89, 3, 2, 2, 2, 89, 87, 3, 2, 2, 2, 89, 90, 3, 2, 2, 2, 90, 91, 3,
	2, 2, 2, 91, 92, 8, 5, 2, 2, 92, 10, 3, 2, 2, 2, 93, 94, 7, 49, 2, 2, 94,
	95, 7, 44, 2, 2, 95, 100, 3, 2, 2, 2, 96, 99, 5, 11, 6, 2, 97, 99, 11,
	2, 2, 2, 98, 96, 3, 2, 2, 2, 98, 97, 3, 2, 2, 2, 99, 102, 3, 2, 2, 2, 100,
	101, 3, 2, 2, 2, 100, 98, 3, 2, 2, 2, 101, 103, 3, 2, 2, 2, 102, 100, 3,
	2, 2, 2, 103, 104, 7, 44, 2, 2, 104, 105, 7, 49, 2, 2, 105, 106, 3, 2,
	2, 2, 106, 107, 8, 6, 2, 2, 107, 12, 3, 2, 2, 2, 108, 109, 7, 49, 2, 2,
	109, 110, 7, 49, 2, 2, 110, 114, 3, 2, 2, 2, 111, 113, 11, 2, 2, 2, 112,
	111, 3, 2, 2, 2, 113, 116, 3, 2, 2, 2, 114, 115, 3, 2, 2, 2, 114, 112,
	3, 2, 2, 2, 115, 117, 3, 2, 2, 2, 116, 114, 3, 2, 2, 2, 117, 118, 5, 7,
	4, 2, 118, 119, 3, 2, 2, 2, 119, 120, 8, 7, 2, 2, 120, 14, 3, 2, 2, 2,
	121, 122, 7, 120, 2, 2, 122, 123, 7, 99, 2, 2, 123, 124, 7, 116, 2, 2,
	124, 125, 7, 117, 2, 2, 125, 16, 3, 2, 2, 2, 126, 127, 7, 114, 2, 2, 127,
	128, 7, 116, 2, 2, 128, 129, 7, 107, 2, 2, 129, 130, 7, 112, 2, 2, 130,
	131, 7, 118, 2, 2, 131, 18, 3, 2, 2, 2, 132, 133, 7, 104, 2, 2, 133, 134,
	7, 99, 2, 2, 134, 135, 7, 107, 2, 2, 135, 136, 7, 110, 2, 2, 136, 20, 3,
	2, 2, 2, 137, 138, 7, 117, 2, 2, 138, 139, 7, 103, 2, 2, 139, 140, 7, 112,
	2, 2, 140, 141, 7, 102, 2, 2, 141, 22, 3, 2, 2, 2, 142, 143, 7, 117, 2,
	2, 143, 144, 7, 113, 2, 2, 144, 145, 7, 119, 2, 2, 145, 146, 7, 116, 2,
	2, 146, 147, 7, 101, 2, 2, 147, 148, 7, 103, 2, 2, 148, 24, 3, 2, 2, 2,
	149, 150, 7, 102, 2, 2, 150, 151, 7, 103, 2, 2, 151, 152, 7, 117, 2, 2,
	152, 153, 7, 118, 2, 2, 153, 154, 7, 107, 2, 2, 154, 155, 7, 112, 2, 2,
	155, 156, 7, 99, 2, 2, 156, 157, 7, 118, 2, 2, 157, 158, 7, 107, 2, 2,
	158, 159, 7, 113, 2, 2, 159, 160, 7, 112, 2, 2, 160, 26, 3, 2, 2, 2, 161,
	162, 7, 99, 2, 2, 162, 163, 7, 110, 2, 2, 163, 164, 7, 110, 2, 2, 164,
	165, 7, 113, 2, 2, 165, 166, 7, 101, 2, 2, 166, 167, 7, 99, 2, 2, 167,
	168, 7, 118, 2, 2, 168, 169, 7, 103, 2, 2, 169, 28, 3, 2, 2, 2, 170, 171,
	7, 45, 2, 2, 171, 30, 3, 2, 2, 2, 172, 173, 7, 47, 2, 2, 173, 32, 3, 2,
	2, 2, 174, 175, 7, 42, 2, 2, 175, 34, 3, 2, 2, 2, 176, 177, 7, 43, 2, 2,
	177, 36, 3, 2, 2, 2, 178, 179, 7, 93, 2, 2, 179, 38, 3, 2, 2, 2, 180, 181,
	7, 95, 2, 2, 181, 40, 3, 2, 2, 2, 182, 183, 7, 125, 2, 2, 183, 42, 3, 2,
	2, 2, 184, 185, 7, 127, 2, 2, 185, 44, 3, 2, 2, 2, 186, 187, 7, 44, 2,
	2, 187, 46, 3, 2, 2, 2, 188, 189, 7, 63, 2, 2, 189, 48, 3, 2, 2, 2, 190,
	191, 7, 99, 2, 2, 191, 192, 7, 101, 2, 2, 192, 193, 7, 101, 2, 2, 193,
	194, 7, 113, 2, 2, 194, 195, 7, 119, 2, 2, 195, 196, 7, 112, 2, 2, 196,
	197, 7, 118, 2, 2, 197, 50, 3, 2, 2, 2, 198, 199, 7, 99, 2, 2, 199, 200,
	7, 117, 2, 2, 200, 201, 7, 117, 2, 2, 201, 202, 7, 103, 2, 2, 202, 203,
	7, 118, 2, 2, 203, 52, 3, 2, 2, 2, 204, 205, 7, 112, 2, 2, 205, 206, 7,
	119, 2, 2, 206, 207, 7, 111, 2, 2, 207, 208, 7, 100, 2, 2, 208, 209, 7,
	103, 2, 2, 209, 210, 7, 116, 2, 2, 210, 54, 3, 2, 2, 2, 211, 212, 7, 111,
	2, 2, 212, 213, 7, 113, 2, 2, 213, 214, 7, 112, 2, 2, 214, 215, 7, 103,
	2, 2, 215, 216, 7, 118, 2, 2, 216, 217, 7, 99, 2, 2, 217, 218, 7, 116,
	2, 2, 218, 219, 7, 123, 2, 2, 219, 56, 3, 2, 2, 2, 220, 221, 7, 114, 2,
	2, 221, 222, 7, 113, 2, 2, 222, 223, 7, 116, 2, 2, 223, 224, 7, 118, 2,
	2, 224, 225, 7, 107, 2, 2, 225, 226, 7, 113, 2, 2, 226, 227, 7, 112, 2,
	2, 227, 58, 3, 2, 2, 2, 228, 230, 9, 4, 2, 2, 229, 228, 3, 2, 2, 2, 230,
	231, 3, 2, 2, 2, 231, 229, 3, 2, 2, 2, 231, 232, 3, 2, 2, 2, 232, 234,
	3, 2, 2, 2, 233, 235, 9, 5, 2, 2, 234, 233, 3, 2, 2, 2, 234, 235, 3, 2,
	2, 2, 235, 236, 3, 2, 2, 2, 236, 238, 7, 49, 2, 2, 237, 239, 9, 5, 2, 2,
	238, 237, 3, 2, 2, 2, 238, 239, 3, 2, 2, 2, 239, 241, 3, 2, 2, 2, 240,
	242, 9, 4, 2, 2, 241, 240, 3, 2, 2, 2, 242, 243, 3, 2, 2, 2, 243, 241,
	3, 2, 2, 2, 243, 244, 3, 2, 2, 2, 244, 260, 3, 2, 2, 2, 245, 247, 9, 4,
	2, 2, 246, 245, 3, 2, 2, 2, 247, 248, 3, 2, 2, 2, 248, 246, 3, 2, 2, 2,
	248, 249, 3, 2, 2, 2, 249, 256, 3, 2, 2, 2, 250, 252, 7, 48, 2, 2, 251,
	253, 9, 4, 2, 2, 252, 251, 3, 2, 2, 2, 253, 254, 3, 2, 2, 2, 254, 252,
	3, 2, 2, 2, 254, 255, 3, 2, 2, 2, 255, 257, 3, 2, 2, 2, 256, 250, 3, 2,
	2, 2, 256, 257, 3, 2, 2, 2, 257, 258, 3, 2, 2, 2, 258, 260, 7, 39, 2, 2,
	259, 229, 3, 2, 2, 2, 259, 246, 3, 2, 2, 2, 260, 60, 3, 2, 2, 2, 261, 263,
	9, 4, 2, 2, 262, 261, 3, 2, 2, 2, 263, 264, 3, 2, 2, 2, 264, 262, 3, 2,
	2, 2, 264, 265, 3, 2, 2, 2, 265, 62, 3, 2, 2, 2, 266, 267, 7, 39, 2, 2,
	267, 64, 3, 2, 2, 2, 268, 270, 7, 38, 2, 2, 269, 271, 9, 6, 2, 2, 270,
	269, 3, 2, 2, 2, 271, 272, 3, 2, 2, 2, 272, 270, 3, 2, 2, 2, 272, 273,
	3, 2, 2, 2, 273, 277, 3, 2, 2, 2, 274, 276, 9, 7, 2, 2, 275, 274, 3, 2,
	2, 2, 276, 279, 3, 2, 2, 2, 277, 275, 3, 2, 2, 2, 277, 278, 3, 2, 2, 2,
	278, 66, 3, 2, 2, 2, 279, 277, 3, 2, 2, 2, 280, 282, 7, 66, 2, 2, 281,
	283, 9, 6, 2, 2, 282, 281, 3, 2, 2, 2, 283, 284, 3, 2, 2, 2, 284, 282,
	3, 2, 2, 2, 284, 285, 3, 2, 2, 2, 285, 289, 3, 2, 2, 2, 286, 288, 9, 8,
	2, 2, 287, 286, 3, 2, 2, 2, 288, 291, 3, 2, 2, 2, 289, 287, 3, 2, 2, 2,
	289, 290, 3, 2, 2, 2, 290, 68, 3, 2, 2, 2, 291, 289, 3, 2, 2, 2, 292, 294,
	9, 9, 2, 2, 293, 292, 3, 2, 2, 2, 294, 295, 3, 2, 2, 2, 295, 293, 3, 2,
	2, 2, 295, 296, 3, 2, 2, 2, 296, 70, 3, 2, 2, 2, 21, 2, 89, 98, 100, 114,
	231, 234, 238, 243, 248, 254, 256, 259, 264, 272, 277, 284, 289, 295, 3,
	8, 2, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'remaining'", "'to'", "", "", "", "", "'vars'", "'print'", "'fail'",
	"'send'", "'source'", "'destination'", "'allocate'", "'+'", "'-'", "'('",
	"')'", "'['", "']'", "'{'", "'}'", "'*'", "'='", "'account'", "'asset'",
	"'number'", "'monetary'", "'portion'", "", "", "'%'",
}

var lexerSymbolicNames = []string{
	"", "", "", "NEWLINE", "WHITESPACE", "MULTILINE_COMMENT", "LINE_COMMENT",
	"VARS", "PRINT", "FAIL", "SEND", "SOURCE", "DESTINATION", "ALLOCATE", "OP_ADD",
	"OP_SUB", "LPAREN", "RPAREN", "LBRACK", "RBRACK", "LBRACE", "RBRACE", "ALL",
	"EQ", "TY_ACCOUNT", "TY_ASSET", "TY_NUMBER", "TY_MONETARY", "TY_PORTION",
	"PORTION", "NUMBER", "PERCENT", "VARIABLE_NAME", "ACCOUNT", "ASSET",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "NEWLINE", "WHITESPACE", "MULTILINE_COMMENT", "LINE_COMMENT",
	"VARS", "PRINT", "FAIL", "SEND", "SOURCE", "DESTINATION", "ALLOCATE", "OP_ADD",
	"OP_SUB", "LPAREN", "RPAREN", "LBRACK", "RBRACK", "LBRACE", "RBRACE", "ALL",
	"EQ", "TY_ACCOUNT", "TY_ASSET", "TY_NUMBER", "TY_MONETARY", "TY_PORTION",
	"PORTION", "NUMBER", "PERCENT", "VARIABLE_NAME", "ACCOUNT", "ASSET",
}

type NumScriptLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewNumScriptLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *NumScriptLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewNumScriptLexer(input antlr.CharStream) *NumScriptLexer {
	l := new(NumScriptLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "NumScript.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// NumScriptLexer tokens.
const (
	NumScriptLexerT__0              = 1
	NumScriptLexerT__1              = 2
	NumScriptLexerNEWLINE           = 3
	NumScriptLexerWHITESPACE        = 4
	NumScriptLexerMULTILINE_COMMENT = 5
	NumScriptLexerLINE_COMMENT      = 6
	NumScriptLexerVARS              = 7
	NumScriptLexerPRINT             = 8
	NumScriptLexerFAIL              = 9
	NumScriptLexerSEND              = 10
	NumScriptLexerSOURCE            = 11
	NumScriptLexerDESTINATION       = 12
	NumScriptLexerALLOCATE          = 13
	NumScriptLexerOP_ADD            = 14
	NumScriptLexerOP_SUB            = 15
	NumScriptLexerLPAREN            = 16
	NumScriptLexerRPAREN            = 17
	NumScriptLexerLBRACK            = 18
	NumScriptLexerRBRACK            = 19
	NumScriptLexerLBRACE            = 20
	NumScriptLexerRBRACE            = 21
	NumScriptLexerALL               = 22
	NumScriptLexerEQ                = 23
	NumScriptLexerTY_ACCOUNT        = 24
	NumScriptLexerTY_ASSET          = 25
	NumScriptLexerTY_NUMBER         = 26
	NumScriptLexerTY_MONETARY       = 27
	NumScriptLexerTY_PORTION        = 28
	NumScriptLexerPORTION           = 29
	NumScriptLexerNUMBER            = 30
	NumScriptLexerPERCENT           = 31
	NumScriptLexerVARIABLE_NAME     = 32
	NumScriptLexerACCOUNT           = 33
	NumScriptLexerASSET             = 34
)
